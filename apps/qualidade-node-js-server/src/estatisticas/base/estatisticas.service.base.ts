/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import { Prisma, Estatisticas as PrismaEstatisticas } from "@prisma/client";

export class EstatisticasServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(
    args: Omit<Prisma.EstatisticasCountArgs, "select">
  ): Promise<number> {
    return this.prisma.estatisticas.count(args);
  }

  async estatisticasItems(
    args: Prisma.EstatisticasFindManyArgs
  ): Promise<PrismaEstatisticas[]> {
    return this.prisma.estatisticas.findMany(args);
  }
  async estatisticas(
    args: Prisma.EstatisticasFindUniqueArgs
  ): Promise<PrismaEstatisticas | null> {
    return this.prisma.estatisticas.findUnique(args);
  }
  async createEstatisticas(
    args: Prisma.EstatisticasCreateArgs
  ): Promise<PrismaEstatisticas> {
    return this.prisma.estatisticas.create(args);
  }
  async updateEstatisticas(
    args: Prisma.EstatisticasUpdateArgs
  ): Promise<PrismaEstatisticas> {
    return this.prisma.estatisticas.update(args);
  }
  async deleteEstatisticas(
    args: Prisma.EstatisticasDeleteArgs
  ): Promise<PrismaEstatisticas> {
    return this.prisma.estatisticas.delete(args);
  }
}
