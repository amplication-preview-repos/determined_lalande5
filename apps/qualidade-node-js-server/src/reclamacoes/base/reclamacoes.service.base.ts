/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import { Prisma, Reclamacoes as PrismaReclamacoes } from "@prisma/client";

export class ReclamacoesServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(
    args: Omit<Prisma.ReclamacoesCountArgs, "select">
  ): Promise<number> {
    return this.prisma.reclamacoes.count(args);
  }

  async reclamacoesItems(
    args: Prisma.ReclamacoesFindManyArgs
  ): Promise<PrismaReclamacoes[]> {
    return this.prisma.reclamacoes.findMany(args);
  }
  async reclamacoes(
    args: Prisma.ReclamacoesFindUniqueArgs
  ): Promise<PrismaReclamacoes | null> {
    return this.prisma.reclamacoes.findUnique(args);
  }
  async createReclamacoes(
    args: Prisma.ReclamacoesCreateArgs
  ): Promise<PrismaReclamacoes> {
    return this.prisma.reclamacoes.create(args);
  }
  async updateReclamacoes(
    args: Prisma.ReclamacoesUpdateArgs
  ): Promise<PrismaReclamacoes> {
    return this.prisma.reclamacoes.update(args);
  }
  async deleteReclamacoes(
    args: Prisma.ReclamacoesDeleteArgs
  ): Promise<PrismaReclamacoes> {
    return this.prisma.reclamacoes.delete(args);
  }
}
